{
    "prep_time": 600,
    "flex_event_duration": 2400,
    "market_time": 300,
    "indicator_config": {
        "agent_config": {
            "id": "FlexibilityIndicator",
            "modules": [
                {
                    "module_id": "Ag1Com",
                    "type": "local_broadcast"
                },
                {
                    "module_id": "FlexibilityIndicator",
                    "type": "agentlib_flexquant.flexibility_indicator",
                    "results_file": "results\\flexibility_indicator.csv",
                    "price_variable": "r_pel",
                    "parameters": [
                        {
                            "name": "prep_time",
                            "value": 600
                        },
                        {
                            "name": "market_time",
                            "value": 300
                        },
                        {
                            "name": "flex_event_duration",
                            "value": 2400
                        },
                        {
                            "name": "time_step",
                            "value": 300
                        },
                        {
                            "name": "prediction_horizon",
                            "value": 16
                        }
                    ],
                    "inputs": [
                        {
                            "name": "r_pel",
                            "alias": "r_pel"
                        }
                    ]
                }
            ]
        },
        "collocation_order": 2,
        "name_of_created_file": "indicator.json"
    },
    "market_config": "flex_configs\\market.json",
    "baseline_config_generator_data": {
        "power_variable": "P_el",
        "power_unit": "W",
        "profile_deviation_weight": 100
    },
    "shadow_mpc_config_generator_data": {
        "weights": [{"name": "s_P", "value": 10}],
        "pos_flex": {
            "flex_cost_function": "sum([self.s_T * self.T_slack ** 2, self.s_P * self.P_el])"
        },
        "neg_flex": {
            "flex_cost_function": "sum([self.s_T * self.T_slack ** 2, -self.s_P * self.P_el])"
        }
    },
    "path_to_flex_files": "created_flex_files",
    "delete_files": false,
    "overwrite_files": true
}