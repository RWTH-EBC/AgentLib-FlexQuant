{
    "messages": [
        {
            "type": "error",
            "module": "agentlib_flexquant",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/__init__.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.utils.plugin_import'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/__init__.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.optimization_backends'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 24,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 33,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 35,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 36,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 128,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 150,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 162,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 168,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 183,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 188,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 306,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (147/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 534,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (149/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 539,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (149/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 544,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (149/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 608,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 609,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 610,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 613,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 622,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (153/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 624,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 627,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 628,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 635,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (160/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 637,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 644,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (157/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 645,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (123/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 647,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 649,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (126/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 650,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (175/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 652,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 653,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 654,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 668,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 673,
            "column": 59,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 676,
            "column": 104,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 676,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 677,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (136/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 683,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (147/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 688,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (162/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 690,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 715,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'astor'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'black'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.agent'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.errors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.module'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 18,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.data_structures.mpc_datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.models.casadi_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 20,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.modules.mpc_full'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator",
            "line": 30,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (17/7)",
            "message-id": "R0902"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.generate_flex_agents",
            "line": 188,
            "column": 13,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.generate_flex_agents",
            "line": 188,
            "column": 107,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.generate_flex_agents.<lambda>",
            "line": 194,
            "column": 28,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unnecessary-lambda",
            "message": "Lambda may not be necessary",
            "message-id": "W0108"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.append_module_and_dump_agent",
            "line": 236,
            "column": 17,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.append_module_and_dump_agent",
            "line": 238,
            "column": 17,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.adapt_mpc_module_config",
            "line": 358,
            "column": 11,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unidiomatic-typecheck",
            "message": "Use isinstance() rather than type() for a typecheck.",
            "message-id": "C0123"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.adapt_mpc_module_config",
            "line": 291,
            "column": 4,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (18/12)",
            "message-id": "R0912"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.adapt_market_config",
            "line": 492,
            "column": 16,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unnecessary-dunder-call",
            "message": "Unnecessarily calls dunder method __setattr__. Set attribute directly or use setattr built-in function.",
            "message-id": "C2801"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator._generate_flex_model_definition",
            "line": 502,
            "column": 4,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator._generate_flex_model_definition",
            "line": 526,
            "column": 13,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator._generate_flex_model_definition",
            "line": 526,
            "column": 47,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator._generate_flex_model_definition",
            "line": 570,
            "column": 13,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator._generate_flex_model_definition",
            "line": 570,
            "column": 39,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.run_config_validations",
            "line": 650,
            "column": 12,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.run_config_validations",
            "line": 668,
            "column": 37,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.run_config_validations",
            "line": 672,
            "column": 41,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.run_config_validations",
            "line": 683,
            "column": 24,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.run_config_validations",
            "line": 688,
            "column": 24,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.run_config_validations",
            "line": 601,
            "column": 4,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (17/12)",
            "message-id": "R0912"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.adapt_sim_results_path",
            "line": 706,
            "column": 13,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "FlexAgentGenerator.adapt_sim_results_path",
            "line": 706,
            "column": 50,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import json\" should be placed before \"import astor\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from copy import deepcopy\" should be placed before \"import astor\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import astor\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.generate_flex_agents",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "agentlib_flexquant/generate_flex_agents.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import List, Union\" should be placed before \"import astor\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 14,
            "column": 29,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\ '. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.errors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.optimization_backends.casadi_.minlp_cia'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.optimization_backends.casadi_.core.casadi_backend'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.data_structures.mpc_datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "",
            "line": 12,
            "column": 4,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "raise-missing-from",
            "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise OptionalDependencyError(used_object='Pycombina', dependency_install='.\\\\ after cloning pycombina. Instructions: https://pycombina.readthedocs.io/en/latest/install.html#') from exc'",
            "message-id": "W0707"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCIABackendConfig",
            "line": 19,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCIABackendConfig.Config",
            "line": 27,
            "column": 4,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCIABackendConfig.Config",
            "line": 27,
            "column": 4,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCIABackendConfig",
            "line": 19,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCasADiCIABackend",
            "line": 32,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCasADiCIABackend.__init__",
            "line": 36,
            "column": 4,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "useless-parent-delegation",
            "message": "Useless parent or super() delegation in method '__init__'",
            "message-id": "W0246"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCasADiCIABackend.do_pycombina",
            "line": 39,
            "column": 4,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.optimization_backends.constrained_cia",
            "obj": "ConstrainedCasADiCIABackend",
            "line": 32,
            "column": 0,
            "path": "agentlib_flexquant/optimization_backends/constrained_cia.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.modules'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "FlexibilityBaselineMPC",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "FlexibilityBaselineMPC.pre_computation_hook",
            "line": 7,
            "column": 4,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "FlexibilityBaselineMPC",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "FlexibilityBaselineMINLPMPC",
            "line": 19,
            "column": 0,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "FlexibilityBaselineMINLPMPC.pre_computation_hook",
            "line": 22,
            "column": 4,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.baseline_mpc",
            "obj": "FlexibilityBaselineMINLPMPC",
            "line": 19,
            "column": 0,
            "path": "agentlib_flexquant/modules/baseline_mpc.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "",
            "line": 83,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.modules'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMPC",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMPC.register_callbacks",
            "line": 17,
            "column": 4,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMPC.calc_flex_callback",
            "line": 56,
            "column": 12,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "consider-using-dict-items",
            "message": "Consider iterating with .items()",
            "message-id": "C0206"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMPC.calc_flex_callback",
            "line": 56,
            "column": 16,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "redefined-argument-from-local",
            "message": "Redefining argument with the local name 'name'",
            "message-id": "R1704"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMPC.calc_flex_callback",
            "line": 56,
            "column": 24,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "consider-iterating-dictionary",
            "message": "Consider iterating the dictionary directly instead of calling .keys()",
            "message-id": "C0201"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMPC.process",
            "line": 59,
            "column": 4,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMINLPMPC",
            "line": 64,
            "column": 0,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMINLPMPC.register_callbacks",
            "line": 73,
            "column": 4,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMINLPMPC.calc_flex_callback",
            "line": 112,
            "column": 12,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "consider-using-dict-items",
            "message": "Consider iterating with .items()",
            "message-id": "C0206"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMINLPMPC.calc_flex_callback",
            "line": 112,
            "column": 16,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "redefined-argument-from-local",
            "message": "Redefining argument with the local name 'name'",
            "message-id": "R1704"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMINLPMPC.calc_flex_callback",
            "line": 112,
            "column": 24,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "consider-iterating-dictionary",
            "message": "Consider iterating the dictionary directly instead of calling .keys()",
            "message-id": "C0201"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.shadow_mpc",
            "obj": "FlexibilityShadowMINLPMPC.process",
            "line": 115,
            "column": 4,
            "path": "agentlib_flexquant/modules/shadow_mpc.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 49,
            "column": 30,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 73,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 134,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 138,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 144,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 149,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 153,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 178,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 179,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 181,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModuleConfig",
            "line": 13,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModuleConfig.check_results_file_extension",
            "line": 56,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModuleConfig",
            "line": 13,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.register_callbacks",
            "line": 93,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.write_results",
            "line": 118,
            "column": 8,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.random_flexibility_callback",
            "line": 128,
            "column": 62,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'name'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.single_flexibility_callback",
            "line": 170,
            "column": 62,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'name'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.custom_flexibility_callback",
            "line": 200,
            "column": 8,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.dummy_callback",
            "line": 202,
            "column": 29,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'inp'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.dummy_callback",
            "line": 202,
            "column": 49,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'name'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.process",
            "line": 213,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.set_random_seed",
            "line": 78,
            "column": 8,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'random_generator' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.register_callbacks",
            "line": 112,
            "column": 8,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'cooldown_ticker' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "FlexibilityMarketModule.random_flexibility_callback",
            "line": 163,
            "column": 20,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'cooldown_ticker' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_market",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_market.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import List, Optional, Union\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 18,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (152/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 31,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 51,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (128/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 52,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (140/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 53,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 130,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 134,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 200,
            "column": 30,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 215,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 283,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 286,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 292,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (133/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 293,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 313,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 340,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 403,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (132/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 406,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (186/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 420,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (164/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 450,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 452,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 483,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 486,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 487,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 489,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (211/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 494,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "line-too-long",
            "message": "Line too long (211/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 498,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCorrectFlexCosts",
            "line": 14,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCorrectFlexCosts",
            "line": 14,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCalculateFlexCosts",
            "line": 34,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCalculateFlexCosts.validate_constant_price",
            "line": 49,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCalculateFlexCosts.validate_constant_price",
            "line": 49,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "no-self-argument",
            "message": "Method 'validate_constant_price' should have \"self\" as first argument",
            "message-id": "E0213"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCalculateFlexCosts.validate_constant_price",
            "line": 51,
            "column": 12,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "broad-exception-raised",
            "message": "Raising too general exception: Exception",
            "message-id": "W0719"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "InputsForCalculateFlexCosts",
            "line": 34,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModuleConfig",
            "line": 62,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModuleConfig.check_results_file_extension",
            "line": 217,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModuleConfig",
            "line": 62,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule",
            "line": 225,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.__init__",
            "line": 246,
            "column": 8,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.register_callbacks",
            "line": 248,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.process",
            "line": 258,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.callback",
            "line": 261,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.callback",
            "line": 288,
            "column": 16,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "invalid-name",
            "message": "Variable name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.callback",
            "line": 289,
            "column": 16,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.callback",
            "line": 261,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (16/12)",
            "message-id": "R0912"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.write_results",
            "line": 334,
            "column": 28,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.write_results",
            "line": 334,
            "column": 46,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.write_results",
            "line": 334,
            "column": 57,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.write_results",
            "line": 334,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (13/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.send_flex_offer",
            "line": 436,
            "column": 4,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.check_power_end_deviation",
            "line": 489,
            "column": 12,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "FlexibilityIndicatorModule.check_power_end_deviation",
            "line": 494,
            "column": 12,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.modules.flexibility_indicator",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/modules/flexibility_indicator.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import List, Optional\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 35,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 43,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 68,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 367,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 368,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 375,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 376,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 396,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 397,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 404,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 405,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 412,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.data_structures.mpc_datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "create_ast_element",
            "line": 39,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "add_input",
            "line": 43,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "add_input",
            "line": 43,
            "column": 84,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'type'",
            "message-id": "W0622"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "add_parameter",
            "line": 56,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "add_output",
            "line": 68,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "add_output",
            "line": 68,
            "column": 37,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'type'",
            "message-id": "W0622"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "SetupSystemModifier.visit_Module",
            "line": 112,
            "column": 4,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "invalid-name",
            "message": "Method name \"visit_Module\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "SetupSystemModifier.visit_ClassDef",
            "line": 135,
            "column": 4,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "invalid-name",
            "message": "Method name \"visit_ClassDef\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "SetupSystemModifier.get_leftmost_list",
            "line": 185,
            "column": 8,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "SetupSystemModifier.modify_config_class_baseline",
            "line": 265,
            "column": 21,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "consider-merging-isinstance",
            "message": "Consider merging these isinstance calls to isinstance(body.value, (ast.BinOp, ast.Tuple))",
            "message-id": "R1701"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "SetupSystemModifier.modify_config_class_baseline",
            "line": 297,
            "column": 21,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "consider-merging-isinstance",
            "message": "Consider merging these isinstance calls to isinstance(body.value, (ast.BinOp, ast.Tuple))",
            "message-id": "R1701"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "SetupSystemModifier.modify_setup_system_shadow",
            "line": 362,
            "column": 24,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'ind'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.parsing",
            "obj": "remove_all_imports_from_tree",
            "line": 530,
            "column": 0,
            "path": "agentlib_flexquant/utils/parsing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 25,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "line-too-long",
            "message": "Line too long (136/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 118,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 122,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 124,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 131,
            "column": 59,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "fixme",
            "message": "TODO: find usage in other branches",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.modules'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.agent'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.module'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "get_module_type_matching_dict",
            "line": 42,
            "column": 11,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "invalid-name",
            "message": "Variable name \"v\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "get_module_type_matching_dict",
            "line": 55,
            "column": 8,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "invalid-name",
            "message": "Variable name \"v\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "get_orig_module_type",
            "line": 73,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "get_module",
            "line": 94,
            "column": 4,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "useless-else-on-loop",
            "message": "Else clause on loop without a break statement, remove the else and de-indent all the code inside it",
            "message-id": "W0120"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "subtract_relative_path",
            "line": 131,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.config_management",
            "obj": "get_class_from_file",
            "line": 153,
            "column": 0,
            "path": "agentlib_flexquant/utils/config_management.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 28,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 33,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 68,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "line-too-long",
            "message": "Line too long (123/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 80,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "_set_mean_values._get_intervals_for_mean",
            "line": 34,
            "column": 32,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "invalid-name",
            "message": "Argument name \"s\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "strip_multi_index",
            "line": 58,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "strip_multi_index.<lambda>",
            "line": 61,
            "column": 40,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "unnecessary-lambda",
            "message": "Lambda may not be necessary",
            "message-id": "W0108"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "strip_multi_index.<lambda>",
            "line": 61,
            "column": 50,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "eval-used",
            "message": "Use of eval",
            "message-id": "W0123"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "convert_timescale_of_index",
            "line": 68,
            "column": 31,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "invalid-name",
            "message": "Argument name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.data_handling",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/utils/data_handling.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Literal\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 23,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 24,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 446,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "line-too-long",
            "message": "Line too long (126/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 525,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'dash'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'plotly'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.agent'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils.analysis'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils.plotting.interactive'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from agentlib_flexquant.data_structures import flex_results' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "CustomBound",
            "line": 18,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.__init__",
            "line": 86,
            "column": 8,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"LINE_PROPERTIES\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard",
            "line": 42,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (8/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.__init__",
            "line": 62,
            "column": 4,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (7/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.__init__",
            "line": 123,
            "column": 12,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "unnecessary-comprehension",
            "message": "Unnecessary use of a comprehension, use list(self.intersection_mpcs_sim.keys()) instead.",
            "message-id": "R1721"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.__init__",
            "line": 123,
            "column": 28,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "consider-iterating-dictionary",
            "message": "Consider iterating the dictionary directly instead of calling .keys()",
            "message-id": "C0201"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.plot_one_mpc_variable._add_step_to_data",
            "line": 223,
            "column": 34,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "invalid-name",
            "message": "Argument name \"s\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.plot_flexibility_kpi",
            "line": 346,
            "column": 8,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.mark_characteristic_times_of_accepted_offers",
            "line": 486,
            "column": 8,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.create_plot",
            "line": 511,
            "column": 8,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.create_plot",
            "line": 541,
            "column": 29,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "consider-iterating-dictionary",
            "message": "Consider iterating the dictionary directly instead of calling .keys()",
            "message-id": "C0201"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.create_plot",
            "line": 559,
            "column": 16,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ts\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show.create_plot",
            "line": 586,
            "column": 23,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"t\": 20, \"b\": 20}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show",
            "line": 676,
            "column": 41,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "Dashboard.show",
            "line": 132,
            "column": 4,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (135/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.utils.interactive",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/utils/interactive.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import get_args, Union, Optional\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "",
            "line": 31,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "RandomOptions",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "RandomOptions",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "SingleOptions",
            "line": 27,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "SingleOptions",
            "line": 27,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "CustomOptions",
            "line": 34,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "CustomOptions",
            "line": 34,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "MarketSpecifications",
            "line": 40,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "MarketSpecifications.set_options_type",
            "line": 66,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "MarketSpecifications",
            "line": 40,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "RandomMarket",
            "line": 78,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "RandomMarket",
            "line": 78,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.market",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/market.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Union, Literal\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 82,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 153,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 219,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (138/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 226,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (159/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 237,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (123/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 242,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 250,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (144/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 271,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 306,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (155/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 343,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 433,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 507,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "KPI.Config",
            "line": 30,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "KPI.Config",
            "line": 30,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "KPI.get_kpi_identifier",
            "line": 33,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "KPI",
            "line": 10,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "KPISeries._get_dt",
            "line": 55,
            "column": 8,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"dt\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "KPISeries._get_dt",
            "line": 54,
            "column": 8,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "invalid-name",
            "message": "Variable name \"dt\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityKPIs.calculate",
            "line": 200,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (10/5)",
            "message-id": "R0913"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityKPIs.calculate",
            "line": 205,
            "column": 12,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'mpc_time_grid'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityData",
            "line": 367,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (10/7)",
            "message-id": "R0902"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityData.Config",
            "line": 426,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityData.Config",
            "line": 426,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityData.__init__",
            "line": 429,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "FlexibilityData.get_kpis",
            "line": 506,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_kpis",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_kpis.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Union, Optional\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 54,
            "column": 21,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 59,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.data_structures.mpc_datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "BaseMPCData",
            "line": 9,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "BaselineMPCData.update_config_parameters_appendix",
            "line": 79,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "BaselineMPCData",
            "line": 32,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "PFMPCData",
            "line": 98,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "NFMPCData",
            "line": 131,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import List, Optional\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.data_structures.mpcs",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/mpcs.py",
            "symbol": "unused-import",
            "message": "Unused Optional imported from typing",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 59,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "OfferStatus",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "OfferStatus",
            "line": 9,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"not_accepted\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "OfferStatus",
            "line": 10,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"accepted_positive\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "OfferStatus",
            "line": 11,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"accepted_negative\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "FlexOffer.Config",
            "line": 54,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "FlexOffer.Config",
            "line": 54,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "FlexOffer.as_dataframe",
            "line": 73,
            "column": 8,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "FlexOffer",
            "line": 14,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from enum import Enum\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_offer",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_offer.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Optional\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 85,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 287,
            "column": 33,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 306,
            "column": 33,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 444,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 452,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 491,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.agent'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.modules.simulation.simulator'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.modules.mpc'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.utils.analysis'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "load_indicator",
            "line": 29,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "load_market",
            "line": 41,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results",
            "line": 45,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results",
            "line": 45,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (29/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results.__init__",
            "line": 80,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results._load_flex_config",
            "line": 121,
            "column": 21,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results._load_flex_config",
            "line": 121,
            "column": 47,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results._get_config_filenames",
            "line": 147,
            "column": 20,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "warning",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results._load_simulator_config",
            "line": 213,
            "column": 17,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results._load_simulator_config",
            "line": 213,
            "column": 54,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results.convert_timescale_of_dataframe_index",
            "line": 375,
            "column": 12,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "Results.get_intersection_mpcs_sim.get_id_alias_name_dict_element",
            "line": 411,
            "column": 23,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "consider-using-in",
            "message": "Consider merging these comparisons with 'in' by using 'alias in (var.alias, var.name)'. Use a set instead if elements are hashable.",
            "message-id": "R1714"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Union, Optional, Dict, Any, List, Type\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flex_results",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flex_results.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 22,
            "column": 5,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 38,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 40,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 72,
            "column": 37,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 76,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 159,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 183,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.agent'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib.core.errors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "import-error",
            "message": "Unable to import 'agentlib_mpc.data_structures.mpc_datamodels'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "ForcedOffers",
            "line": 12,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "ForcedOffers",
            "line": 13,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"positive\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "ForcedOffers",
            "line": 14,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "invalid-name",
            "message": "Class constant name \"negative\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "ShadowMPCConfigGeneratorConfig.assign_weights_to_flex",
            "line": 36,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "ShadowMPCConfigGeneratorConfig",
            "line": 17,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "FlexibilityMarketConfig",
            "line": 47,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "FlexibilityIndicatorConfig.check_file_extension",
            "line": 71,
            "column": 4,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "FlexibilityIndicatorConfig",
            "line": 59,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from enum import Enum\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.flexquant",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/flexquant.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import List, Optional, Union\" should be placed before \"import pydantic\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.globals",
            "obj": "",
            "line": 24,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/globals.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.globals",
            "obj": "",
            "line": 37,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/globals.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.globals",
            "obj": "",
            "line": 43,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/globals.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.globals",
            "obj": "",
            "line": 49,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/globals.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.globals",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/globals.py",
            "symbol": "invalid-name",
            "message": "Constant name \"FlexibilityOffer\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "agentlib_flexquant.data_structures.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/__init__.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_flexquant.modules.flexibility_indicator:[325:345]\n==agentlib_flexquant.modules.flexibility_market:[84:93]\n        results_file = self.config.results_file\n        try:\n            results = pd.read_csv(results_file, header=[0], index_col=[0, 1])\n            return results\n        except FileNotFoundError:\n            self.logger.error(\"Results file %s was not found.\", results_file)\n            return None\n\n    def register_callbacks(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_flexquant.modules.flexibility_indicator:[217:224]\n==agentlib_flexquant.modules.flexibility_market:[56:64]\n        if self.results_file and self.results_file.suffix != \".csv\":\n            raise ValueError(\n                f\"Invalid file extension for 'results_file': '{self.results_file}'. \"\n                f\"Expected a '.csv' file.\"\n            )\n        return self\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib_flexquant.data_structures.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib_flexquant/data_structures/__init__.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==agentlib_flexquant.data_structures.flexquant:[99:105]\n==agentlib_flexquant.optimization_backends.constrained_cia:[19:26]\n    market_time: int = pydantic.Field(\n        default=900,\n        ge=0,\n        unit=\"s\",\n        description=\"Time for market interaction\",\n    )\n",
            "message-id": "R0801"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 6,
            "attr": 3,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 5,
            "const": 1,
            "inlinevar": 0,
            "function": 0,
            "method": 2,
            "module": 0,
            "variable": 18,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "agentlib_flexquant": {
                "convention": 0,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 0
            },
            "agentlib_flexquant.generate_flex_agents": {
                "convention": 53,
                "error": 11,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 255,
                "warning": 11
            },
            "agentlib_flexquant.optimization_backends.constrained_cia": {
                "convention": 6,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 41,
                "warning": 3
            },
            "agentlib_flexquant.optimization_backends.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_flexquant.modules.baseline_mpc": {
                "convention": 5,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 15,
                "warning": 0
            },
            "agentlib_flexquant.modules.shadow_mpc": {
                "convention": 13,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 63,
                "warning": 0
            },
            "agentlib_flexquant.modules.flexibility_market": {
                "convention": 18,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 117,
                "warning": 8
            },
            "agentlib_flexquant.modules.flexibility_indicator": {
                "convention": 44,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 190,
                "warning": 3
            },
            "agentlib_flexquant.modules.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_flexquant.utils.parsing": {
                "convention": 20,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 151,
                "warning": 3
            },
            "agentlib_flexquant.utils.config_management": {
                "convention": 9,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 96,
                "warning": 2
            },
            "agentlib_flexquant.utils.data_handling": {
                "convention": 9,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 44,
                "warning": 2
            },
            "agentlib_flexquant.utils.interactive": {
                "convention": 11,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 10,
                "statement": 210,
                "warning": 1
            },
            "agentlib_flexquant.utils.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.market": {
                "convention": 9,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 5,
                "statement": 29,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.flex_kpis": {
                "convention": 20,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 163,
                "warning": 1
            },
            "agentlib_flexquant.data_structures.mpcs": {
                "convention": 5,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 67,
                "warning": 1
            },
            "agentlib_flexquant.data_structures.flex_offer": {
                "convention": 10,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 32,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.flex_results": {
                "convention": 15,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 172,
                "warning": 3
            },
            "agentlib_flexquant.data_structures.flexquant": {
                "convention": 16,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 67,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.globals": {
                "convention": 5,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 24,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 0,
                "warning": 0
            }
        },
        "by_msg": {
            "import-error": 70,
            "line-too-long": 117,
            "trailing-whitespace": 17,
            "missing-module-docstring": 16,
            "too-many-instance-attributes": 4,
            "unspecified-encoding": 8,
            "invalid-name": 35,
            "unnecessary-lambda": 2,
            "unidiomatic-typecheck": 1,
            "too-many-branches": 4,
            "unnecessary-dunder-call": 1,
            "too-many-locals": 1,
            "logging-fstring-interpolation": 5,
            "f-string-without-interpolation": 3,
            "wrong-import-order": 20,
            "anomalous-backslash-in-string": 1,
            "raise-missing-from": 1,
            "missing-class-docstring": 23,
            "too-few-public-methods": 27,
            "useless-parent-delegation": 1,
            "missing-function-docstring": 29,
            "consider-using-dict-items": 2,
            "redefined-argument-from-local": 2,
            "consider-iterating-dictionary": 4,
            "unused-argument": 5,
            "unnecessary-pass": 1,
            "attribute-defined-outside-init": 3,
            "trailing-newlines": 2,
            "no-self-argument": 1,
            "broad-exception-raised": 1,
            "too-many-arguments": 6,
            "redefined-builtin": 2,
            "no-else-return": 1,
            "consider-merging-isinstance": 2,
            "unused-variable": 1,
            "fixme": 1,
            "inconsistent-return-statements": 3,
            "useless-else-on-loop": 1,
            "eval-used": 1,
            "consider-using-from-import": 1,
            "unnecessary-comprehension": 1,
            "use-dict-literal": 1,
            "too-many-statements": 1,
            "unused-import": 1,
            "missing-final-newline": 2,
            "consider-using-in": 1,
            "duplicate-code": 3
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "agentlib_flexquant.modules.shadow_mpc": [
                "agentlib_flexquant"
            ],
            "agentlib_flexquant.modules.baseline_mpc": [
                "agentlib_flexquant"
            ],
            "agentlib_flexquant.modules.flexibility_indicator": [
                "agentlib_flexquant",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results"
            ],
            "agentlib_flexquant.modules.flexibility_market": [
                "agentlib_flexquant",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results"
            ],
            "agentlib_flexquant.data_structures.globals": [
                "agentlib_flexquant.data_structures.mpcs",
                "agentlib_flexquant.utils.interactive",
                "agentlib_flexquant.modules.shadow_mpc",
                "agentlib_flexquant.modules.flexibility_indicator",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.optimization_backends.constrained_cia",
                "agentlib_flexquant.data_structures.market",
                "agentlib_flexquant.utils.parsing",
                "agentlib_flexquant.data_structures.flex_kpis"
            ],
            "agentlib_flexquant.utils.config_management": [
                "agentlib_flexquant.data_structures.mpcs",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results"
            ],
            "agentlib_flexquant.utils.parsing": [
                "agentlib_flexquant.generate_flex_agents"
            ],
            "agentlib_flexquant.data_structures.flexquant": [
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results",
                "agentlib_flexquant.utils.interactive"
            ],
            "agentlib_flexquant.data_structures.mpcs": [
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flexquant",
                "agentlib_flexquant.data_structures.flex_results",
                "agentlib_flexquant.utils.parsing"
            ],
            "agentlib_flexquant.utils.data_handling": [
                "agentlib_flexquant.data_structures.flex_kpis",
                "agentlib_flexquant.data_structures.flex_results",
                "agentlib_flexquant.modules.shadow_mpc"
            ],
            "agentlib_flexquant.data_structures.flex_offer": [
                "agentlib_flexquant.utils.interactive",
                "agentlib_flexquant.modules.flexibility_market",
                "agentlib_flexquant.modules.flexibility_indicator"
            ],
            "agentlib_flexquant.data_structures.market": [
                "agentlib_flexquant.modules.flexibility_market"
            ],
            "agentlib_flexquant.data_structures.flex_kpis": [
                "agentlib_flexquant.utils.interactive",
                "agentlib_flexquant.modules.flexibility_indicator"
            ],
            "agentlib_flexquant.data_structures.flex_results": [
                "agentlib_flexquant.utils.interactive"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 36,
            "klass": 41,
            "method": 98,
            "module": 22
        },
        "undocumented": {
            "function": 8,
            "klass": 23,
            "method": 21,
            "module": 16
        },
        "convention": 269,
        "error": 71,
        "fatal": 0,
        "info": 0,
        "refactor": 58,
        "statement": 1745,
        "warning": 38,
        "global_note": 0,
        "nb_duplicated_lines": 19,
        "percent_duplicated_lines": 0.3889457523029683
    },
    "previous": {
        "bad_names": {
            "argument": 6,
            "attr": 3,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 5,
            "const": 1,
            "inlinevar": 0,
            "function": 0,
            "method": 2,
            "module": 0,
            "variable": 18,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "agentlib_flexquant": {
                "convention": 0,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 0
            },
            "agentlib_flexquant.generate_flex_agents": {
                "convention": 53,
                "error": 11,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 255,
                "warning": 11
            },
            "agentlib_flexquant.optimization_backends.constrained_cia": {
                "convention": 6,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 41,
                "warning": 3
            },
            "agentlib_flexquant.optimization_backends.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_flexquant.modules.baseline_mpc": {
                "convention": 5,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 15,
                "warning": 0
            },
            "agentlib_flexquant.modules.shadow_mpc": {
                "convention": 13,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 63,
                "warning": 0
            },
            "agentlib_flexquant.modules.flexibility_market": {
                "convention": 18,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 117,
                "warning": 8
            },
            "agentlib_flexquant.modules.flexibility_indicator": {
                "convention": 44,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 190,
                "warning": 3
            },
            "agentlib_flexquant.modules.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_flexquant.utils.parsing": {
                "convention": 20,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 151,
                "warning": 3
            },
            "agentlib_flexquant.utils.config_management": {
                "convention": 9,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 96,
                "warning": 2
            },
            "agentlib_flexquant.utils.data_handling": {
                "convention": 9,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 44,
                "warning": 2
            },
            "agentlib_flexquant.utils.interactive": {
                "convention": 11,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 10,
                "statement": 210,
                "warning": 1
            },
            "agentlib_flexquant.utils.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.market": {
                "convention": 9,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 5,
                "statement": 29,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.flex_kpis": {
                "convention": 20,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 163,
                "warning": 1
            },
            "agentlib_flexquant.data_structures.mpcs": {
                "convention": 5,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 4,
                "statement": 67,
                "warning": 1
            },
            "agentlib_flexquant.data_structures.flex_offer": {
                "convention": 10,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 32,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.flex_results": {
                "convention": 15,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 172,
                "warning": 3
            },
            "agentlib_flexquant.data_structures.flexquant": {
                "convention": 16,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 67,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.globals": {
                "convention": 5,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 24,
                "warning": 0
            },
            "agentlib_flexquant.data_structures.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 0,
                "warning": 0
            }
        },
        "by_msg": {
            "import-error": 70,
            "line-too-long": 117,
            "trailing-whitespace": 17,
            "missing-module-docstring": 16,
            "too-many-instance-attributes": 4,
            "unspecified-encoding": 8,
            "invalid-name": 35,
            "unnecessary-lambda": 2,
            "unidiomatic-typecheck": 1,
            "too-many-branches": 4,
            "unnecessary-dunder-call": 1,
            "too-many-locals": 1,
            "logging-fstring-interpolation": 5,
            "f-string-without-interpolation": 3,
            "wrong-import-order": 20,
            "anomalous-backslash-in-string": 1,
            "raise-missing-from": 1,
            "missing-class-docstring": 23,
            "too-few-public-methods": 27,
            "useless-parent-delegation": 1,
            "missing-function-docstring": 29,
            "consider-using-dict-items": 2,
            "redefined-argument-from-local": 2,
            "consider-iterating-dictionary": 4,
            "unused-argument": 5,
            "unnecessary-pass": 1,
            "attribute-defined-outside-init": 3,
            "trailing-newlines": 2,
            "no-self-argument": 1,
            "broad-exception-raised": 1,
            "too-many-arguments": 6,
            "redefined-builtin": 2,
            "no-else-return": 1,
            "consider-merging-isinstance": 2,
            "unused-variable": 1,
            "fixme": 1,
            "inconsistent-return-statements": 3,
            "useless-else-on-loop": 1,
            "eval-used": 1,
            "consider-using-from-import": 1,
            "unnecessary-comprehension": 1,
            "use-dict-literal": 1,
            "too-many-statements": 1,
            "unused-import": 1,
            "missing-final-newline": 2,
            "consider-using-in": 1,
            "duplicate-code": 3
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "agentlib_flexquant.modules.shadow_mpc": [
                "agentlib_flexquant"
            ],
            "agentlib_flexquant.modules.baseline_mpc": [
                "agentlib_flexquant"
            ],
            "agentlib_flexquant.modules.flexibility_indicator": [
                "agentlib_flexquant",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results"
            ],
            "agentlib_flexquant.modules.flexibility_market": [
                "agentlib_flexquant",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results"
            ],
            "agentlib_flexquant.data_structures.globals": [
                "agentlib_flexquant.data_structures.mpcs",
                "agentlib_flexquant.utils.interactive",
                "agentlib_flexquant.modules.flexibility_indicator",
                "agentlib_flexquant.utils.parsing",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.optimization_backends.constrained_cia",
                "agentlib_flexquant.data_structures.market",
                "agentlib_flexquant.modules.shadow_mpc",
                "agentlib_flexquant.data_structures.flex_kpis"
            ],
            "agentlib_flexquant.utils.config_management": [
                "agentlib_flexquant.data_structures.mpcs",
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results"
            ],
            "agentlib_flexquant.utils.parsing": [
                "agentlib_flexquant.generate_flex_agents"
            ],
            "agentlib_flexquant.data_structures.flexquant": [
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flex_results",
                "agentlib_flexquant.utils.interactive"
            ],
            "agentlib_flexquant.data_structures.mpcs": [
                "agentlib_flexquant.generate_flex_agents",
                "agentlib_flexquant.data_structures.flexquant",
                "agentlib_flexquant.data_structures.flex_results",
                "agentlib_flexquant.utils.parsing"
            ],
            "agentlib_flexquant.utils.data_handling": [
                "agentlib_flexquant.data_structures.flex_kpis",
                "agentlib_flexquant.data_structures.flex_results",
                "agentlib_flexquant.modules.shadow_mpc"
            ],
            "agentlib_flexquant.data_structures.flex_offer": [
                "agentlib_flexquant.utils.interactive",
                "agentlib_flexquant.modules.flexibility_market",
                "agentlib_flexquant.modules.flexibility_indicator"
            ],
            "agentlib_flexquant.data_structures.market": [
                "agentlib_flexquant.modules.flexibility_market"
            ],
            "agentlib_flexquant.data_structures.flex_kpis": [
                "agentlib_flexquant.utils.interactive",
                "agentlib_flexquant.modules.flexibility_indicator"
            ],
            "agentlib_flexquant.data_structures.flex_results": [
                "agentlib_flexquant.utils.interactive"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 36,
            "klass": 41,
            "method": 98,
            "module": 22
        },
        "undocumented": {
            "function": 8,
            "klass": 23,
            "method": 21,
            "module": 16
        },
        "convention": 269,
        "error": 71,
        "fatal": 0,
        "info": 0,
        "refactor": 58,
        "statement": 1745,
        "warning": 38,
        "global_note": 5.873925501432665,
        "nb_duplicated_lines": 19,
        "percent_duplicated_lines": 0.3889457523029683
    }
}
